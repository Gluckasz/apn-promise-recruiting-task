// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using apn_promise_recruiting_task.Model;

#nullable disable

namespace apn_promise_recruiting_task.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.0");

            modelBuilder.Entity("apn_promise_recruiting_task.Model.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.HasKey("OrderId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("apn_promise_recruiting_task.Model.OrderITem", b =>
                {
                    b.Property<int>("OrderITemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("OrderId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProductId")
                        .HasColumnType("INTEGER");

                    b.HasKey("OrderITemId");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderITems");
                });

            modelBuilder.Entity("apn_promise_recruiting_task.Model.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Price")
                        .HasColumnType("INTEGER");

                    b.HasKey("ProductId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            Currency = "PLN",
                            Name = "Laptop",
                            Price = 2500
                        },
                        new
                        {
                            ProductId = 2,
                            Currency = "PLN",
                            Name = "Klawiatura",
                            Price = 120
                        },
                        new
                        {
                            ProductId = 3,
                            Currency = "PLN",
                            Name = "Mysz",
                            Price = 90
                        },
                        new
                        {
                            ProductId = 4,
                            Currency = "PLN",
                            Name = "Monitor",
                            Price = 1000
                        },
                        new
                        {
                            ProductId = 5,
                            Currency = "PLN",
                            Name = "Kaczka debuggująca",
                            Price = 66
                        });
                });

            modelBuilder.Entity("apn_promise_recruiting_task.Model.OrderITem", b =>
                {
                    b.HasOne("apn_promise_recruiting_task.Model.Order", null)
                        .WithMany("Orders")
                        .HasForeignKey("OrderId");

                    b.HasOne("apn_promise_recruiting_task.Model.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("apn_promise_recruiting_task.Model.Order", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
